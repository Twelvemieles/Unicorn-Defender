<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dPad</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed =0
visible=false
global.dir=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause)
{
exit;
}
if (global.android == 1)
{
if (visible=true)
{
dis = point_distance(x,y,mouse_x,mouse_y);

if (dis &gt;= 32)
{
image_index = 1;
global.dir = point_direction(x,y,mouse_x,mouse_y);
image_angle = global.dir;
global.act = true;
}
else
{
image_index = 0;
global.dir = 0;
global.act = false;
}
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///bullets

if (global.pause or global. loose) exit;

if (place_meeting(x+ hspeed, y + vspeed, obj_asteroid) or collision_line(x,y,x+ hspeed,y + vspeed,obj_asteroid, true,false))
{

 var objetivo =   collision_line(x,y,x+ hspeed * 2,y + vspeed * 2,obj_asteroid, true,false);
if instance_exists(objetivo){
   objetivo.vida -= global.dano; instance_create(objetivo.x - hspeed,objetivo.y - vspeed,obj_chispas); 
   
   }
     move_bounce_solid(true); 
     image_index = irandom(4);
     
}


if (place_meeting(x+ hspeed, y + vspeed, obj_asteroid_2) or collision_line(x,y,x+ hspeed,y + vspeed,obj_asteroid_2, true,false))
{

     var objetivo = collision_line(x,y,x+ hspeed * 2,y + vspeed * 2,obj_asteroid_2, true,false);
if instance_exists(objetivo){
   objetivo.vida -= global.dano; instance_create(objetivo.x - hspeed,objetivo.y - vspeed,obj_chispas); 
   }
     move_bounce_solid(true);  
     image_index = irandom(4);
     
}


if (place_meeting(x+ hspeed, y + vspeed, obj_asteroid_3) or collision_line(x,y,x+ hspeed,y + vspeed,obj_asteroid_3, true,false))
{

  var objetivo = collision_line(x,y,x+ hspeed * 2,y + vspeed * 2,obj_asteroid_3, true,false);
if instance_exists(objetivo){
   objetivo.vida -= global.dano; instance_create(objetivo.x - hspeed,objetivo.y - vspeed,obj_chispas); 
   }
     move_bounce_solid(true);  
     image_index = irandom(4);
          
}






if (place_meeting(x+ hspeed, y + vspeed, obj_powerVel) or collision_line(x,y,x+ hspeed,y + vspeed,obj_powerVel, true,false))
{
var objetivo = collision_line(x,y,x+ hspeed * 2,y + vspeed * 2,obj_powerVel, true,false);
if instance_exists(objetivo){
   objetivo.vida -= global.dano; instance_create(objetivo.x - hspeed,objetivo.y - vspeed,obj_chispas); 
   }
     move_bounce_solid(true);  
     image_index = irandom(4);
          
}





if (place_meeting(x+ hspeed, y + vspeed, obj_powerBoom) or collision_line(x,y,x+ hspeed,y + vspeed,obj_powerBoom, true,false))
{
var objetivo = collision_line(x,y,x+ hspeed * 2,y + vspeed * 2,obj_powerBoom, true,false);
if instance_exists(objetivo){
   objetivo.vida -= global.dano; instance_create(objetivo.x - hspeed,objetivo.y - vspeed,obj_chispas); 
   }
     move_bounce_solid(true);  
     image_index = irandom(4); 
       
}




if (place_meeting(x+ hspeed, y + vspeed, obj_levelUp) or collision_line(x,y,x+ hspeed,y + vspeed,obj_levelUp, true,false))
{
var objetivo = collision_line(x,y,x+ hspeed * 2,y + vspeed * 2,obj_levelUp, true,false);
if instance_exists(objetivo){
   objetivo.vida -= global.dano; instance_create(objetivo.x - hspeed,objetivo.y - vspeed,obj_chispas); 
   }
     move_bounce_solid(true);  
     image_index = irandom(4); 
         
}



if (place_meeting(x+ hspeed, y + vspeed, obj_powerTime) or collision_line(x,y,x+ hspeed,y + vspeed,obj_powerTime, true,false))
{
var objetivo = collision_line(x,y,x+ hspeed * 2,y + vspeed * 2,obj_powerTime, true,false);
if instance_exists(objetivo){
   objetivo.vida -= global.dano; instance_create(objetivo.x - hspeed,objetivo.y - vspeed,obj_chispas); 
   }
     move_bounce_solid(true);  
     image_index = irandom(4);   
        
}



if (place_meeting(x+ hspeed, y + vspeed, obj_powerRay) or collision_line(x,y,x+ hspeed,y + vspeed,obj_powerRay, true,false))
{
var objetivo =collision_line(x,y,x+ hspeed * 2,y + vspeed * 2,obj_powerRay, true,false);
if instance_exists(objetivo){
   objetivo.vida -= global.dano; instance_create(objetivo.x - hspeed,objetivo.y - vspeed,obj_chispas); 
   }
     move_bounce_solid(true);  
     image_index = irandom(4);  
     
}



if (place_meeting(x+ hspeed, y + vspeed, obj_powerHorn) or collision_line(x,y,x+ hspeed,y + vspeed,obj_powerHorn, true,false))
{
var objetivo =collision_line(x,y,x+ hspeed * 2,y + vspeed * 2,obj_powerHorn, true,false);
if instance_exists(objetivo){
   objetivo.vida -= global.dano; instance_create(objetivo.x - hspeed,objetivo.y - vspeed,obj_chispas); 
   }
     move_bounce_solid(true);  
     image_index = irandom(4);  
     
}
if (place_meeting(x+ hspeed, y + vspeed, obj_boss1final) or collision_line(x,y,x+ hspeed,y + vspeed,obj_boss1final, true,false))
{
var objetivo =collision_line(x,y,x+ hspeed * 2,y + vspeed * 2,obj_boss1final, true,false);
if instance_exists(objetivo){
   objetivo.vida -= global.dano; instance_create(objetivo.x - hspeed,objetivo.y - vspeed,obj_chispas); 
   }
     move_bounce_solid(true);  
     image_index = irandom(4);  
     
}


if (place_meeting(x+ hspeed, y + vspeed, obj_asteroid_4) or collision_line(x,y,x+ hspeed,y + vspeed,obj_asteroid_4, true,false))
{
var objetivo =collision_line(x,y,x+ hspeed * 2,y + vspeed * 2,obj_asteroid_4, true,false);
if instance_exists(objetivo){
   objetivo.vida -= global.dano; instance_create(objetivo.x - hspeed,objetivo.y - vspeed,obj_chispas); 
   }
     move_bounce_solid(true);  
     image_index = irandom(4);  
     
}
if (place_meeting(x+ hspeed, y + vspeed, obj_asteroid_4_1) or collision_line(x,y,x+ hspeed,y + vspeed,obj_asteroid_4_1, true,false))
{
var objetivo =collision_line(x,y,x+ hspeed * 2,y + vspeed * 2,obj_asteroid_4_1, true,false);
if instance_exists(objetivo){
   objetivo.vida -= global.dano; instance_create(objetivo.x - hspeed,objetivo.y - vspeed,obj_chispas); 
   }
     move_bounce_solid(true);  
     image_index = irandom(4);  
     
}

if (place_meeting(x+ hspeed, y + vspeed, obj_asteroidBoss) or collision_line(x,y,x+ hspeed,y + vspeed,obj_asteroidBoss, true,false))
{
var objetivo =collision_line(x,y,x+ hspeed * 2,y + vspeed * 2,obj_asteroidBoss, true,false);
if instance_exists(objetivo){
   objetivo.vida -= global.dano; instance_create(objetivo.x - hspeed,objetivo.y - vspeed,obj_chispas); 
   }
     move_bounce_solid(true);  
     image_index = irandom(4);  
     
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible=false
global.dir=0
global.act=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause)
{
exit;
}
if (global.android == 1)
{
if (visible=false)
{
x=mouse_x
y=mouse_y
visible=true
}
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
