<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>Pnt_transition</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

dir = TranDir.FromRight;
overlap = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_blend_mode_ext(bm_one, bm_zero);
if(captured &amp;&amp; captured2){
    x1 = lengthdir_x(view_wview*progress, dir*90+180);
    y1 = lengthdir_y(view_hview*progress, dir*90+180);
    x2 = lengthdir_x(view_wview - view_wview*progress, dir*90);
    y2 = lengthdir_y(view_hview - view_hview*progress, dir*90);
    if(overlap){
        x1 = 0;
        y1 = 0;
    }

    if(blackout){
        draw_surface(surface, x1, y1);
        draw_set_colour(c_black);
        draw_rectangle(x2, y2, x2 + view_wview, y2 + view_hview, false);
        draw_set_colour(c_white);
    } else{
        if(f_blackout){
            draw_clear(c_black);
            draw_surface(surface2, x2, y2);
        } else{
            if(!f_fadeOut){
                draw_surface(surface, x1, y1);
            } else{
                draw_surface_ext(surface, x1, y1, 1, 1, 0, merge_colour(c_white, c_black, progress), 1);
            }
            draw_surface(surface2, x2, y2);
        }
    }
}
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
