<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>colour = make_colour_rgb(149, 165, 166);

width = 116;
height = 48;

zheight = 6;
maxHeight = 6;
scale = 0.75;
margin = 16;

radius = 12;
highlight = 0;
highlightMax = 0.4;

hover = false;
clicked = false;

text = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mx = mouse_x;
my = mouse_y;

if(mx &gt; x &amp;&amp; mx &lt; x + width &amp;&amp; my &gt; y &amp;&amp; my &lt; y + height){
    if(!hover){
        hover = true;
        tween = tween_create(id, tweenType._custom, 0, highlightMax, 400, EaseCubicOut);
        tween_monitor(tween, set_hover, id);
    }
    if(mouse_check_button_pressed(mb_left)){
        clicked = true;
        tween = tween_create(id, tweenType._custom, zheight, 0, 200, EaseCubicOut);
        tween_monitor(tween, set_zheight, id);
        //audio_play_sound(snd_click, 0, false);
    }
} else{
    if(hover){
        hover = false;
        tween = tween_create(id, tweenType._custom, highlightMax, 0, 400, EaseCubicOut);
        tween_monitor(tween, set_hover, id);
    }
}

if((!mouse_check_button(mb_left) || !hover) &amp;&amp; clicked){
    clicked = false;
    tween = tween_create(id, tweenType._custom, zheight, maxHeight, 200, EaseCubicOut);
    tween_monitor(tween, set_zheight, id);
    hover = false;
    tween = tween_create(id, tweenType._custom, highlightMax, 0, 400, EaseCubicOut);
    tween_monitor(tween, set_hover, id);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_black);
draw_set_alpha((zheight / 8)/2);
draw_roundrect_ext(x, y+zheight, x+width, y+zheight/2+height, radius, radius, false);

draw_set_alpha(1);
draw_set_colour(merge_colour(merge_colour(colour, c_white, highlight), c_black, 0.5));
draw_roundrect_ext(x, y, x+width, y+height, radius, radius, false);

draw_set_colour(merge_colour(colour, c_white, highlight));
draw_roundrect_ext(x, y-zheight, x+width, y+height-zheight, radius, radius, false);

draw_set_font(fnt_button);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_colour(c_black);
draw_text_transformed(floor(x + width/2), floor(y + height/2 - zheight), text, 1, 1, 0);

draw_set_alpha(0.15);
draw_set_colour(c_white);
draw_roundrect_ext(x, y-zheight, x+width, y+height * 0.66-zheight, radius, radius, false);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
