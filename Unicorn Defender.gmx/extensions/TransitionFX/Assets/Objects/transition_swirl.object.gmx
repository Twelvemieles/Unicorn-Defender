<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>Pnt_transition</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_blend_mode_ext(bm_one, bm_zero);

if(captured &amp;&amp; captured2){
    xx = view_wview / 2;
    yy = view_hview / 2;
    w = view_wview/2;
    h = view_hview/2;
    draw_set_colour(c_white);
    if(blackout &amp;&amp; f_blackout){
        if(!f_fadeOut){
            draw_surface(surface, 0, 0);
        } else{
            draw_surface_ext(surface, 0, 0, 1, 1, 0, merge_colour(c_white, c_black, progress), 1);
        }
        draw_set_colour(c_black);
        draw_primitive_begin(pr_trianglefan);
    } else if(f_blackout){
        draw_clear(c_black);
        tex = surface_get_texture(surface2);
        draw_primitive_begin_texture(pr_trianglefan, tex);
    } else{
        if(!f_fadeOut){
            draw_surface(surface, 0, 0);
        } else{
            draw_surface_ext(surface, 0, 0, 1, 1, 0, merge_colour(c_white, c_black, progress), 1);
        }
        tex = surface_get_texture(surface2);
        draw_primitive_begin_texture(pr_trianglefan, tex);
    }
    draw_vertex_texture(xx, yy, 0.5, 0.5);
    draw_vertex_texture(xx, 0, 0.5, 0);
    
    c = min(progress * 8, 1);
    d = 45 * c;
    dif = tan(d * pi/180);
    draw_vertex_texture(xx + w*dif, 0, 0.5 + 0.5*dif, 0);
    if(progress &gt;= 0.125){
        c = min((progress-0.125) * 8, 1);
        d = 45 - 45 * c;
        dif = 1-tan(d * pi/180);
        draw_vertex_texture(xx + w, h*dif, 1, 0.5*dif);
        
        if(progress &gt;= 0.25){
            c = min((progress-0.25) * 8, 1);
            d = 45 * c;
            dif = tan(d * pi/180);
            draw_vertex_texture(xx + w, yy + h*dif, 1, 0.5 + 0.5*dif);
        }
        if(progress &gt;= 0.375){
            c = min((progress-0.375) * 8, 1);
            d = 45 - 45 * c;
            dif = 1 - tan(d * pi/180);
            draw_vertex_texture(xx*2 - w*dif, yy*2, 1 - 0.5*dif, 1);
        }
        if(progress &gt;= 0.5){
            c = min((progress-0.5) * 8, 1);
            d = 45 * c;
            dif = tan(d * pi/180);
            draw_vertex_texture(xx - w*dif, yy*2, 0.5 - 0.5*dif, 1);
        }
        if(progress &gt;= 0.625){
            c = min((progress-0.625) * 8, 1);
            d = 45 - 45 * c;
            dif = 1 - tan(d * pi/180);
            draw_vertex_texture(0, yy*2 - h*dif, 0, 1 - 0.5*dif);
        }
        if(progress &gt;= 0.75){
            c = min((progress-0.75) * 8, 1);
            d = 45 * c;
            dif = tan(d * pi/180);
            draw_vertex_texture(0, yy - h*dif, 0, 0.5 - 0.5*dif);
        }
        if(progress &gt;= 0.875){
            c = min((progress-0.875) * 8, 1);
            d = 45 - 45 * c;
            dif = 1 - tan(d * pi/180);
            draw_vertex_texture(w*dif, 0, 0.5*dif, 0);
        }
    }
    draw_primitive_end();
    draw_set_blend_mode(bm_normal);
}
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
